name: agent-lite

on:
  workflow_dispatch:
    inputs:
      task:
        description: "Describe the next small task (optional; defaults to ROADMAP.md first unchecked item)"
        required: false
        type: string
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: pr-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # Manual agent run: plan → implement → check → push → open PR
  run:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: true

      - name: Install deps (non-frozen to allow lockfile refresh)
        shell: bash
        run: pnpm install --frozen-lockfile=false

      - name: Build context
        shell: bash
        run: pnpm agent:context

      - name: Plan step
        shell: bash
        run: pnpm agent:plan
        env:
          AGENT_TASK: ${{ github.event.inputs.task }}

      - name: Implement step (branch + seed)
        shell: bash
        run: pnpm agent:impl

      - name: Run checks (typecheck, lint, unit tests)
        shell: bash
        run: pnpm agent:check

      - name: Configure Git author
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Get branch name
        id: br
        shell: bash
        run: echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> "$GITHUB_OUTPUT"

      - name: Push branch
        shell: bash
        run: |
          git push --set-upstream origin "${{ steps.br.outputs.branch }}"

      - name: Create Pull Request
        id: create-pr
        uses: actions/github-script@v7
        env:
          BRANCH: ${{ steps.br.outputs.branch }}
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const head = process.env.BRANCH;
            const base = 'main';

            // If a PR for this branch already exists, reuse it
            const { data: prs } = await github.rest.pulls.list({
              owner, repo, state: 'open', head: `${owner}:${head}`,
            });

            if (prs.length) {
              core.setOutput('url', prs[0].html_url);
            } else {
              const { data: pr } = await github.rest.pulls.create({
                owner, repo, head, base,
                title: `agent: ${head}`,
                body: 'Automated agent step (plan/implement/check). Review carefully. Do not merge if checks fail or patch is large.',
              });
              core.setOutput('url', pr.html_url);
            }

      - name: PR link
        shell: bash
        run: echo "PR opened:${{ steps.create-pr.outputs.url }}"

  # PR gatekeeper: runs on PRs to main and must pass before merge
  check:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: true

      - name: Install deps
        shell: bash
        run: pnpm install --frozen-lockfile=false

      - name: Agent check (typecheck + lint-changed + unit tests)
        shell: bash
        run: pnpm agent:check
