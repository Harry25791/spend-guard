name: agent-lite-gate

on:
  workflow_run:
    workflows: ["agent-lite"]
    types: [completed]

permissions:
  contents: read
  pull-requests: read
  statuses: write

jobs:
  gate:
    if: ${{ github.event.workflow_run.conclusion != 'skipped' }}
    runs-on: ubuntu-latest
    name: Re-run agent:check on PR branch and publish "agent-lite / check" status

    steps:
      - name: Find latest Agent Lite PR
        id: find
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            // Fetch most recent open PRs and pick the newest Agent Lite PR from the bot
            const { data: prs } = await github.rest.pulls.list({
              owner, repo, state: 'open', sort: 'created', direction: 'desc', per_page: 20
            });

            const pr = prs.find(p =>
              p.user?.login === 'github-actions[bot]' &&
              typeof p.title === 'string' &&
              p.title.startsWith('Agent Lite:')
            );

            if (!pr) {
              core.setFailed('No open Agent Lite PR found from github-actions[bot].');
              return;
            }

            core.setOutput('branch', pr.head.ref);
            core.setOutput('sha', pr.head.sha);
            core.setOutput('pr_url', pr.html_url);

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.find.outputs.branch }}
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm (global)
        run: npm i -g pnpm@9.12.0

      - name: Verify pnpm
        run: pnpm --version

      - name: Install deps
        run: pnpm install --frozen-lockfile=false

      - name: Run agent:check
        id: runcheck
        run: pnpm agent:check

      - name: Publish commit status
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const sha = '${{ steps.find.outputs.sha }}';
            const ok = '${{ steps.runcheck.outcome }}' === 'success';
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha,
              state: ok ? 'success' : 'failure',
              context: 'agent-lite / check',
              description: ok ? 'All agent checks passed' : 'Agent checks failed',
              target_url: '${{ steps.find.outputs.pr_url }}'
            });
